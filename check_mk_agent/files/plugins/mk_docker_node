#!/bin/bash
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

if type docker > /dev/null 2>&1; then
    echo "<<<docker_node_info:sep(58)>>>"
    # sed: protect leading whitespace
    docker info | sed 's/^/|/'

    echo "<<<docker_node_disk_usage:sep(0)>>>"
    docker system df

    echo "<<<docker_node_images>>>"
    echo "[[[images]]]"
    docker images --format "{{json .}}"

    echo "[[[image_inspect]]]"
    IMAGE_IDS=$(docker images | awk 'NR>1 {print $3}')
    docker image inspect $IMAGE_IDS

    echo "[[[containers]]]"
    # equivalent of 'docker ps' for newer docker versions: 'docker container ls'
    docker ps --all --format "{{json .}}"

    echo "<<<docker_node_network:sep(0)>>>"
    NETWORK_IDS=$(docker network ls -f 'driver=bridge' | awk 'NR>1 {print $1}')
    docker network inspect $NETWORK_IDS
fi